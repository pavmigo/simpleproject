# import clientView, Manager, Player, VoteSubscriptionPayload, User, ScorePoint, ScorePointSubscriptionPayload, Vote, Tournament, TournamentSubscriptionPayload from "./generated/prisma.graphql"


type Query {
  users(userToken: String): [User!]!
  points(scoreId: String): [ScorePoint!]!
  tournaments(tournamentId: String): [Tournament!]!
  managers(managerId: String): [Manager!]!
  player(playerId: String): [Player!]!

}

type AuthPayload {
  token: String
  user: User
}


type Mutation{
    post(score: String!, scoreLane: String!, tournamentId: String!): ScorePoint!
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    vote(scorePointID: ID!): Vote
    createTournament(name: String!, location: String!): Tournament!
    addUserToTournament(tournamentId: ID!, userId: ID!): User!

    addPlayer(userId: ID!): Player
    addManager(userId: ID!): Manager
    updateScore(scoreId: ID!, score: String, scoreLane: String): ScorePoint!
    
}

type Subscription {
  newScorePoints: ScorePointSubscriptionPayload
  newVote: VoteSubscriptionPayload
  newTournament: TournamentSubscriptionPayload

}
